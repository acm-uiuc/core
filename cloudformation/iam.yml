AWSTemplateFormatVersion: '2010-09-09'
Description: Stack IAM Roles
Transform: AWS::Serverless-2016-10-31
Parameters:
  RunEnvironment:
    Type: String
    AllowedValues:
    - dev
    - prod
  LambdaFunctionName:
    Type: String
    AllowedPattern: ^[a-zA-Z0-9]+[a-zA-Z0-9-]+[a-zA-Z0-9]+$
Resources:
  ApiLambdaIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
      Policies:
      - PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Effect: Allow
            Resource:
            - Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${LambdaFunctionName}:*
          - Effect: Allow
            Action:
            - ec2:CreateNetworkInterface
            - ec2:DescribeNetworkInterfaces
            - ec2:DeleteNetworkInterface
            - ec2:DescribeSubnets
            - ec2:DeleteNetworkInterface
            - ec2:AssignPrivateIpAddresses
            - ec2:UnassignPrivateIpAddresses
            Resource: '*'
        PolicyName: lambda
Outputs:
  MainFunctionRoleArn:
    Description: Main API IAM role ARN
    Value:
      Fn::GetAtt:
      - ApiLambdaIAMRole
      - Arn